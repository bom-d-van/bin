#!/usr/bin/env bash
#
# grm is a script to use with entr in Go app development.
# It build the program; if succeed, kill the old running process;
# if not, do nothing.
#
# grm [-n|--name name] [-b|--build-options options] [file1.go [file2.go [...]]] [options]
#
# Examples
#     # run a package
#     grm
#
#     # run a file
#     grm tt.go
#
#     # ruan multiple fils with tags and names
#     grm -name gaia -o '-tags t1,t2' tt.go cc.go
#
# Use it with entr:
#     find . -iname '*.go' | entr -r grm
#
# Installation
#     curl https://raw.githubusercontent.com/bom-d-van/bin/master/grm > $GOPATH/bin/grm
#

# set -e

files=()
arguments=()
function update_files_or_args {
	if [[ -f "$1" ]]; then
		files+=($1)
	else
		arguments+=($1)
	fi
}

while [[ $# > 0 ]]; do
	key="$1"
	case $key in
	-n|--name)
		name="$2"
		shift # past argument
		;;
	-b|--build-options)
		build_options="$2"
		shift # past argument
		;;
	*)
		update_files_or_args "$1"
		;;
	esac
	shift # past argument or value
done
# files+=($*)
update_files_or_args "$*"

if [[ "$name" == "" ]]; then
	app_name=$(basename $(pwd))
else
	app_name=$name
fi

mark='----------------------------'
echo "[grm] $mark"
echo "[grm] name=$app_name"
[ "$build_options" != "" ] && echo "build_options=$build_options"
[ "$files" != "" ] && echo "files=${files[@]}"
[ "$arguments" != "" ] && echo "arguments=${arguments[@]}"

# build app
if [[ "${#files[@]}" == 0 ]]; then
	if [[ "$name" == "" ]]; then
		echo '[grm] go install'
		go install $build_options
	else
		echo "[grm] go build -o $GOPATH/bin/$app_name"
		go build -o $GOPATH/bin/$app_name $build_options
	fi
else
	echo "[grm] go build -o $GOPATH/bin/$app_name $build_options ${files[@]}"
	go build -o $GOPATH/bin/$app_name $build_options ${files[@]}
fi

echo $app_name

# kill old app
function kill_old {
	echo "[grm] killing existing process"
	if pgrep -f "$GOPATH/bin/$app_name" > /dev/null; then
		count=$(pgrep -f "$GOPATH/bin/$app_name" | wc -l)
		if (( $count > 1 )); then
			echo 'more than one progress matched by grm, please use a more specific name to avoid accidental killings.'
			exit 1
		fi
		echo "[grm] $app_name (pid: $(pgrep -f "$GOPATH/bin/$app_name"))"
		kill -9 $(pgrep -f "$GOPATH/bin/$app_name")
	fi
}

kill_old

# trap kill_old 1 2 3 6 15

echo "[grm] running $app_name ${arguments[@]}"
echo "[grm] $mark"
$GOPATH/bin/$app_name ${arguments[@]}
